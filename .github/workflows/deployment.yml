name: Deploying extension

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  check-server:
    name: Check Language Server
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build LSP server
      run: cargo build --verbose
    - name: Check LSP server
      run: cargo check --verbose
    - name: Run tests for LSP server
      run: cargo test --verbose

  compile-server:
    name: Cross compile
    needs: [check-server]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - name: Installing Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Compiling for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Uploading artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server
          path: target/${{ matrix.target }}/release/meerkat*
  
  deploy-release:
    name: Deploy and Release
    needs: [compile-server]
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - name: Download server
        uses: actions/download-artifact@v3
        with: 
          name: server
          path: server/
      - name: Upload language server
        uses: actions/upload-artifact@v3
        with:
          name: server
          path: server/*
      - id: fetch-version
        name: Fetch version from cargo
        run: |
          RELEASE_VERSION=$(grep -oP '(\d+\.\d+\.\d+)' Cargo.toml | head -n 1)
          echo "Version is $RELEASE_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          generate_release_notes: true
          make_latest: true
          append_body: true
          tag_name: "v${{ steps.fetch-version.outputs.RELEASE_VERSION }}"
          name: "Version ${{ steps.fetch-version.outputs.RELEASE_VERSION }}"
          files: server/*


  
